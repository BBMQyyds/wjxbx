# 指定端口
server:
  port: 8088
  tomcat:
    max-connections: 10000
    accept-count: 1000
    threads:
      max: 800
      min-spare: 400


spring:
  datasource:
    url: jdbc:mysql://101.43.255.130:3306/wjxbx?characterEncoding=utf8&serverTimezone=Asia/Shanghai
    username: root
    password: 20030321lzy
#    url: jdbc:mysql://localhost:3306/wjxbx?characterEncoding=utf8&serverTimezone=Asia/Shanghai
#    username: root
#    password: 2003
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # Spring Boot 默认是不注入这些属性值的，需要自己绑定
      # druid 数据源专有配置
      initialSize: 5
      minIdle: 5
      maxActive: 10
      maxWait: 60000
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true

      # 配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入
      # 如果允许时报错  java.lang.ClassNotFoundException: org.apache.log4j.Priority
      # 则导入 log4j 依赖即可，Maven 地址：https://mvnrepository.com/artifact/log4j/log4j
      filters: stat,wall,log4j
      maxPoolPreparedStatementPerConnectionSize: 20
      useGlobalDataSourceStat: true
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
  # mvc 配置
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
#  # 配置actuator
#  boot:
#    admin:
#      client:
#        url: http://101.43.255.130:8089
#        instance:
#          service-base-url: http://localhost:${server.port}
  security:
    user:
      name: admin
      password: 20030321
  data:
    redis:
      host: 8.140.27.85
      port: 6379
      database: 0
      password: asd898568967qwe



# mybatis 配置
mybatis:
  type-aliases-package: com.jdsbbmq.wjxbx.dao.entity
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true

# 线程池配置
async:
  executor:
    thread:
      core_pool_size: 10
      max_pool_size: 20
      queue_capacity: 10000
      name_prefix: async-service-


#management
management:
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: "*" #开启所有端点
  endpoint:
    health:
      show-details: always


